[project]
name = "fullon-ohlcv-service"
version = "0.3.1"
description = "Async daemon service for collecting OHLCV candles and trade data from cryptocurrency exchanges"
authors = [
    {name = "ingmar", email = "ingmar@avocadoblock.com"}
]
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "asyncio>=3.4.3",
    "arrow>=1.3.0",
    "click>=8.1.0",
    "python-dotenv>=1.0.0",
    "fullon-ohlcv @ git+ssh://git@github.com/ingmarAvocado/fullon_ohlcv.git@main",
    "fullon-exchange @ git+ssh://git@github.com/ingmarAvocado/fullon_exchange.git@main",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-xdist>=3.3.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]

[project.scripts]
fullon-ohlcv-service = "fullon_ohlcv_service.daemon:main"

[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/fullon_ohlcv_service",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=90",
    "-ra",
    "--tb=short"
]
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "slow: marks tests as slow running",
]
filterwarnings = [
    "ignore::DeprecationWarning:uvloop.*",
    "ignore:uvloop.install.*:DeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ["py313"]
include = "\\.pyi?$"

[tool.ruff]
line-length = 100
target-version = "py313"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "I001"]  # Allow assert and flexible imports in tests

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "arrow.*",
    "click.*",
]
ignore_missing_imports = true
[tool.poetry.group.dev.dependencies]
pytest = "^8.4.2"
pytest-asyncio = "^1.1.0"
black = "^25.1.0"
ruff = "^0.12.12"
mypy = "^1.17.1"
pytest-cov = "^7.0.0"
pytest-xdist = "^3.8.0"
factory-boy = "^3.3.3"

